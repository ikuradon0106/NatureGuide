<!-- 現在のユーザーがこのグループ(=@group)に参加済みかを判定 -->
<% if @group.users.include?(current_user) %>
  <p>すでにこのグループに参加しています。</p>

<%# 指定のユーザーが指定のグループに参加申請中（pending または requested）かどうか判定するクラスメソッドを使用（GroupRequestモデルに記載） %>
<% elsif GroupRequest.requesting?(current_user, @group) %>
  <p>参加申請中です。承認をお待ちください。</p>

  <%= button_to "申請をキャンセル", group_group_request_path(@group, current_user_pending_request), method: :delete, "data-confirm" => "本当に削除しますか？" %>

<%# 上記のいずれかでもない場合は、参加申請ボタンを表示 %>
<% else %>
  <%# Turboによる非同期送信を無効化、通常のフォーム送信に(GETエラーになるため) %>
  <%= form_with url: group_group_requests_path(@group), method: :post, data: { turbo: false } do |f| %>
    <%= f.submit "参加申請" %>
  <% end %>
<% end %>

<!-- 承認・拒否ボタン -->
<% if current_user.id == @group.owner_id %>
  <h3>申請中のユーザー一覧</h3>

  <%# where(status: "pending") を使用することで、dbからステータスがpendingだけを抽出するが、user_idがオーナーIDと異なる申請だけを取得する %>
  <% pending_requests = @group.group_requests.where(status: "pending").where.not(user_id: @group.owner_id) %>

  <% if pending_requests.any? %>

    <% pending_requests.each do |group_request| %>
    <!-- 申請中のユーザー一覧表示 -->


          <p><%= group_request.user.nickname %>さんが申請中です。</p>
            <%= button_to "承認", group_group_request_path(@group, group_request, decision: "approve"), method: :patch %>
            <%= button_to "拒否", group_group_request_path(@group, group_request, decision: "reject"), method: :patch %>
      
    <% end %>
  <% else %>
      <p>申請中のユーザーはいません。</p>
  <% end %>
<% end %>